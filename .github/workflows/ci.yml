name: ci

on: [push, pull_request]

jobs:
  web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: web-${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            web-${{ runner.os }}-yarn-
      - run: yarn --frozen-lockfile
      - run: yarn format:check
      - run: yarn lint
      - run: yarn test
  worker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
        working-directory: worker
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: worker-${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            worker-${{ runner.os }}-yarn-
      - run: yarn --frozen-lockfile
        working-directory: worker
      - run: yarn format:check
        working-directory: worker
      - run: CI=true yarn test
        working-directory: worker
      - name: Publish Production
        if: github.ref == 'refs/heads/master' && github.event_name == 'push' && github.repository == 'denoland/deno_website2'
        uses: cloudflare/wrangler-action@1.1.0
        with:
          environment: "production"
          apiToken: ${{ secrets.cloudflareToken }}
          workingDirectory: worker
      - name: Publish Staging
        if: github.event_name == 'push' && github.repository == 'denoland/deno_website2'
        uses: cloudflare/wrangler-action@1.1.0
        with:
          environment: "staging"
          apiToken: ${{ secrets.cloudflareToken }}
          workingDirectory: worker
  merge:
    needs: [web, worker]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/github-script@v2
        if: github.event_name == 'pull_request'
        with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          let isDatabaseChanges = false, isArtworkChanges = false;
          const repo = context.repo;
          const regInp = ["artwork.json", ".png", ".jpeg", ".jpg", ".gif"];
          const pull_issue_number = context.issue.number;
          const options = await github.pulls.listFiles({
            ...repo,
            pull_number: pull_issue_number,
          });
          const files = (
            (await github.paginate(options, (response) => response.data)) || []
          )
            .map((x) => x.filename)
            .filter(Boolean);
          if (
            files.length === 1 &&
            files.filter((f) => f.includes("database.json")).length === 1
          ) {
            isDatabaseChanges = true;
          }
          if (
            files.filter((t) => regInp.map((re) => new RegExp(re, "i")).filter((re) => re.test(t)).length).length === 2
          ) {
            isArtworkChanges = true;
          }
          if (isDatabaseChanges || isArtworkChanges) {
            await github.pulls.merge({
              ...repo,
              pull_number: pull_issue_number,
            });
          }